name: ðŸš§ Static Review using Danger

on:
  push:
    branches: develop
  pull_request:
      branches: develop

jobs:

  linting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      # Cache Gradle dependencies
      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      # Cache Gradle Wrapper
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      #- name: Run android lint
      #  run: ./gradlew lint

      - name: Run ktlint
        run: ./gradlew ktlintCheck

      - name: Run detekt
        run: ./gradlew detektAll

      - name: Get directory
        run: ls

      - name: Get into reports
        run: |
          cd build/reports
          ls -d "$PWD"/*
          cd detekt
          ls -d "$PWD"/*
          cd ../ktlint
          ls -d "$PWD"/*

  danger:
    #needs: [lint, ktlint, detekt]
    if: ${{ always() }}
    needs: [ linting ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby 3.2.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Install danger
        run: |
          gem install danger
          gem install danger-checkstyle_format
          gem install danger-android_lint
          gem install danger-kotlin_detekt

      - name: Cache bundle
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Bundle install
        run: |
          gem install bundler
          gem install danger
          gem install danger-checkstyle_format
          gem install danger-android_lint
          gem install danger-kotlin_detekt
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run danger
        run: |
          bundle exec danger --verbose
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}